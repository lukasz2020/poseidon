{"version":3,"sources":["data/order/orderModel.js","data/orders/ordersActionCreators.js","constants/countries.js","validators/addOrderFormValidator.js","components/AddOrderForm.js","hooks/useForm.js","constants/constants.js","services/discountService.js","services/priceService.js","components/Order.js","components/Orders.js","components/Product.js","containers/ProductContainer.js","data/orders/ordersActionTypes.js","data/geolocation/geolocationActionCreators.js","data/geolocation/geolocationActionTypes.js","routes/routes.js","serviceWorker.js","data/orders/ordersReducer.js","data/geolocation/geolocationReducer.js","rootReducer.js","index.js","configureStore.js"],"names":["Order","Record","id","createdAt","country","firstName","lastName","units","isPremium","sortOrdersByDateDesc","orders","sort","orderA","orderB","timeA","Date","get","getTime","timeB","name","code","values","errors","Map","forEach","value","set","defaultValues","email","phone","streetName","city","AddOrderForm","props","onGeolocationInitialize","useEffect","initialValues","validator","initialState","useState","fields","setFields","setFormErrors","reset","onChange","event","target","type","Number","remove","merge","useForm","addOrderFormValidator","total","discount","price","setPrice","console","log","className","src","htmlFor","cx","totalUnits","parseInt","totalPrice","decimalPart","priceParts","toString","split","parseFloat","roundPrice","calculatePrice","toFixed","max","options","key","i","push","generateUnitOptionTags","onSubmit","preventDefault","onCheckout","count","placeholder","COUNTRIES","map","unshift","generateCountryOptionTags","checked","order","date","toLocaleDateString","toLocaleTimeString","Orders","onInitialize","Product","ProductPage","connect","state","geolocationReducer","ordersReducer","dispatch","getState","fetch","then","response","json","data","List","addNewOrder","exact","path","to","ProductContainer","Boolean","window","location","hostname","match","combineReducers","action","newOrder","Math","random","toISOString","updateIn","countryCode","store","preloadedState","middlewares","thunkMiddleware","loggerMiddleware","middlewareEnhancer","applyMiddleware","createStore","rootReducer","configureStore","ReactDOM","render","routes","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5b177d1a.chunk.js","sourcesContent":["import { Record } from 'immutable'\n\nexport default class Order extends Record({\n  id: null,\n  createdAt: null,\n  country: null,\n  firstName: null,\n  lastName: null,\n  units: 0,\n  isPremium: false\n}) { }\n","import { LOAD_ORDERS_REQUEST, LOAD_ORDERS_SUCCESS, ADD_NEW_ORDER } from './ordersActionTypes'\nimport Order from '../order/orderModel'\nimport { List } from 'immutable'\nimport fetch from 'cross-fetch'\n\nexport function loadOrders () {\n  return function (dispatch, getState) {\n    const state = getState()\n    const orders = state.ordersReducer.get('orders')\n\n    if (orders.count()) {\n      return\n    }\n\n    dispatch({\n      type: LOAD_ORDERS_REQUEST\n    })\n\n    fetch('https://api.jsonbin.io/b/5ecd438ca2a6e10f7bc644c3')\n      .then(response => response.json())\n      .then(data => {\n        const orders = new List(data.map((order) => {\n          // order.createdAt = new Date('2020-05-30T12:25:00.000+00:00');\n          // console.log(new Order(order));\n          return new Order(order)\n        }))\n\n        dispatch({\n          type: LOAD_ORDERS_SUCCESS,\n          orders: sortOrdersByDateDesc(orders)\n        })\n      })\n  }\n}\n\nconst sortOrdersByDateDesc = (orders) => {\n  return orders.sort((orderA, orderB) => {\n    const timeA = (new Date(orderA.get('createdAt'))).getTime()\n    const timeB = (new Date(orderB.get('createdAt'))).getTime()\n\n    if (timeB < timeA) { return -1 }\n    if (timeB > timeA) { return 1 }\n    if (timeA === timeB) { return 0 }\n  })\n}\n\nexport function addNewOrder (order) {\n  return function (dispatch) {\n    dispatch({\n      type: ADD_NEW_ORDER,\n      order\n    })\n  }\n}\n","export default [\n  { name: 'Afghanistan', code: 'AF' },\n  { name: 'Åland Islands', code: 'AX' },\n  { name: 'Albania', code: 'AL' },\n  { name: 'Algeria', code: 'DZ' },\n  { name: 'American Samoa', code: 'AS' },\n  { name: 'AndorrA', code: 'AD' },\n  { name: 'Angola', code: 'AO' },\n  { name: 'Anguilla', code: 'AI' },\n  { name: 'Antarctica', code: 'AQ' },\n  { name: 'Antigua and Barbuda', code: 'AG' },\n  { name: 'Argentina', code: 'AR' },\n  { name: 'Armenia', code: 'AM' },\n  { name: 'Aruba', code: 'AW' },\n  { name: 'Australia', code: 'AU' },\n  { name: 'Austria', code: 'AT' },\n  { name: 'Azerbaijan', code: 'AZ' },\n  { name: 'Bahamas', code: 'BS' },\n  { name: 'Bahrain', code: 'BH' },\n  { name: 'Bangladesh', code: 'BD' },\n  { name: 'Barbados', code: 'BB' },\n  { name: 'Belarus', code: 'BY' },\n  { name: 'Belgium', code: 'BE' },\n  { name: 'Belize', code: 'BZ' },\n  { name: 'Benin', code: 'BJ' },\n  { name: 'Bermuda', code: 'BM' },\n  { name: 'Bhutan', code: 'BT' },\n  { name: 'Bolivia', code: 'BO' },\n  { name: 'Bosnia and Herzegovina', code: 'BA' },\n  { name: 'Botswana', code: 'BW' },\n  { name: 'Bouvet Island', code: 'BV' },\n  { name: 'Brazil', code: 'BR' },\n  { name: 'British Indian Ocean Territory', code: 'IO' },\n  { name: 'Brunei Darussalam', code: 'BN' },\n  { name: 'Bulgaria', code: 'BG' },\n  { name: 'Burkina Faso', code: 'BF' },\n  { name: 'Burundi', code: 'BI' },\n  { name: 'Cambodia', code: 'KH' },\n  { name: 'Cameroon', code: 'CM' },\n  { name: 'Canada', code: 'CA' },\n  { name: 'Cape Verde', code: 'CV' },\n  { name: 'Cayman Islands', code: 'KY' },\n  { name: 'Central African Republic', code: 'CF' },\n  { name: 'Chad', code: 'TD' },\n  { name: 'Chile', code: 'CL' },\n  { name: 'China', code: 'CN' },\n  { name: 'Christmas Island', code: 'CX' },\n  { name: 'Cocos (Keeling) Islands', code: 'CC' },\n  { name: 'Colombia', code: 'CO' },\n  { name: 'Comoros', code: 'KM' },\n  { name: 'Congo', code: 'CG' },\n  { name: 'Congo, The Democratic Republic of the', code: 'CD' },\n  { name: 'Cook Islands', code: 'CK' },\n  { name: 'Costa Rica', code: 'CR' },\n  { name: 'Cote D\\'Ivoire', code: 'CI' },\n  { name: 'Croatia', code: 'HR' },\n  { name: 'Cuba', code: 'CU' },\n  { name: 'Cyprus', code: 'CY' },\n  { name: 'Czech Republic', code: 'CZ' },\n  { name: 'Denmark', code: 'DK' },\n  { name: 'Djibouti', code: 'DJ' },\n  { name: 'Dominica', code: 'DM' },\n  { name: 'Dominican Republic', code: 'DO' },\n  { name: 'Ecuador', code: 'EC' },\n  { name: 'Egypt', code: 'EG' },\n  { name: 'El Salvador', code: 'SV' },\n  { name: 'Equatorial Guinea', code: 'GQ' },\n  { name: 'Eritrea', code: 'ER' },\n  { name: 'Estonia', code: 'EE' },\n  { name: 'Ethiopia', code: 'ET' },\n  { name: 'Falkland Islands (Malvinas)', code: 'FK' },\n  { name: 'Faroe Islands', code: 'FO' },\n  { name: 'Fiji', code: 'FJ' },\n  { name: 'Finland', code: 'FI' },\n  { name: 'France', code: 'FR' },\n  { name: 'French Guiana', code: 'GF' },\n  { name: 'French Polynesia', code: 'PF' },\n  { name: 'French Southern Territories', code: 'TF' },\n  { name: 'Gabon', code: 'GA' },\n  { name: 'Gambia', code: 'GM' },\n  { name: 'Georgia', code: 'GE' },\n  { name: 'Germany', code: 'DE' },\n  { name: 'Ghana', code: 'GH' },\n  { name: 'Gibraltar', code: 'GI' },\n  { name: 'Greece', code: 'GR' },\n  { name: 'Greenland', code: 'GL' },\n  { name: 'Grenada', code: 'GD' },\n  { name: 'Guadeloupe', code: 'GP' },\n  { name: 'Guam', code: 'GU' },\n  { name: 'Guatemala', code: 'GT' },\n  { name: 'Guernsey', code: 'GG' },\n  { name: 'Guinea', code: 'GN' },\n  { name: 'Guinea-Bissau', code: 'GW' },\n  { name: 'Guyana', code: 'GY' },\n  { name: 'Haiti', code: 'HT' },\n  { name: 'Heard Island and Mcdonald Islands', code: 'HM' },\n  { name: 'Holy See (Vatican City State)', code: 'VA' },\n  { name: 'Honduras', code: 'HN' },\n  { name: 'Hong Kong', code: 'HK' },\n  { name: 'Hungary', code: 'HU' },\n  { name: 'Iceland', code: 'IS' },\n  { name: 'India', code: 'IN' },\n  { name: 'Indonesia', code: 'ID' },\n  { name: 'Iran, Islamic Republic Of', code: 'IR' },\n  { name: 'Iraq', code: 'IQ' },\n  { name: 'Ireland', code: 'IE' },\n  { name: 'Isle of Man', code: 'IM' },\n  { name: 'Israel', code: 'IL' },\n  { name: 'Italy', code: 'IT' },\n  { name: 'Jamaica', code: 'JM' },\n  { name: 'Japan', code: 'JP' },\n  { name: 'Jersey', code: 'JE' },\n  { name: 'Jordan', code: 'JO' },\n  { name: 'Kazakhstan', code: 'KZ' },\n  { name: 'Kenya', code: 'KE' },\n  { name: 'Kiribati', code: 'KI' },\n  { name: 'Korea, Democratic People\\'S Republic of', code: 'KP' },\n  { name: 'Korea, Republic of', code: 'KR' },\n  { name: 'Kuwait', code: 'KW' },\n  { name: 'Kyrgyzstan', code: 'KG' },\n  { name: 'Lao People\\'S Democratic Republic', code: 'LA' },\n  { name: 'Latvia', code: 'LV' },\n  { name: 'Lebanon', code: 'LB' },\n  { name: 'Lesotho', code: 'LS' },\n  { name: 'Liberia', code: 'LR' },\n  { name: 'Libyan Arab Jamahiriya', code: 'LY' },\n  { name: 'Liechtenstein', code: 'LI' },\n  { name: 'Lithuania', code: 'LT' },\n  { name: 'Luxembourg', code: 'LU' },\n  { name: 'Macao', code: 'MO' },\n  { name: 'Macedonia, The Former Yugoslav Republic of', code: 'MK' },\n  { name: 'Madagascar', code: 'MG' },\n  { name: 'Malawi', code: 'MW' },\n  { name: 'Malaysia', code: 'MY' },\n  { name: 'Maldives', code: 'MV' },\n  { name: 'Mali', code: 'ML' },\n  { name: 'Malta', code: 'MT' },\n  { name: 'Marshall Islands', code: 'MH' },\n  { name: 'Martinique', code: 'MQ' },\n  { name: 'Mauritania', code: 'MR' },\n  { name: 'Mauritius', code: 'MU' },\n  { name: 'Mayotte', code: 'YT' },\n  { name: 'Mexico', code: 'MX' },\n  { name: 'Micronesia, Federated States of', code: 'FM' },\n  { name: 'Moldova, Republic of', code: 'MD' },\n  { name: 'Monaco', code: 'MC' },\n  { name: 'Mongolia', code: 'MN' },\n  { name: 'Montserrat', code: 'MS' },\n  { name: 'Morocco', code: 'MA' },\n  { name: 'Mozambique', code: 'MZ' },\n  { name: 'Myanmar', code: 'MM' },\n  { name: 'Namibia', code: 'NA' },\n  { name: 'Nauru', code: 'NR' },\n  { name: 'Nepal', code: 'NP' },\n  { name: 'Netherlands', code: 'NL' },\n  { name: 'Netherlands Antilles', code: 'AN' },\n  { name: 'New Caledonia', code: 'NC' },\n  { name: 'New Zealand', code: 'NZ' },\n  { name: 'Nicaragua', code: 'NI' },\n  { name: 'Niger', code: 'NE' },\n  { name: 'Nigeria', code: 'NG' },\n  { name: 'Niue', code: 'NU' },\n  { name: 'Norfolk Island', code: 'NF' },\n  { name: 'Northern Mariana Islands', code: 'MP' },\n  { name: 'Norway', code: 'NO' },\n  { name: 'Oman', code: 'OM' },\n  { name: 'Pakistan', code: 'PK' },\n  { name: 'Palau', code: 'PW' },\n  { name: 'Palestinian Territory, Occupied', code: 'PS' },\n  { name: 'Panama', code: 'PA' },\n  { name: 'Papua New Guinea', code: 'PG' },\n  { name: 'Paraguay', code: 'PY' },\n  { name: 'Peru', code: 'PE' },\n  { name: 'Philippines', code: 'PH' },\n  { name: 'Pitcairn', code: 'PN' },\n  { name: 'Poland', code: 'PL' },\n  { name: 'Portugal', code: 'PT' },\n  { name: 'Puerto Rico', code: 'PR' },\n  { name: 'Qatar', code: 'QA' },\n  { name: 'Reunion', code: 'RE' },\n  { name: 'Romania', code: 'RO' },\n  { name: 'Russian Federation', code: 'RU' },\n  { name: 'RWANDA', code: 'RW' },\n  { name: 'Saint Helena', code: 'SH' },\n  { name: 'Saint Kitts and Nevis', code: 'KN' },\n  { name: 'Saint Lucia', code: 'LC' },\n  { name: 'Saint Pierre and Miquelon', code: 'PM' },\n  { name: 'Saint Vincent and the Grenadines', code: 'VC' },\n  { name: 'Samoa', code: 'WS' },\n  { name: 'San Marino', code: 'SM' },\n  { name: 'Sao Tome and Principe', code: 'ST' },\n  { name: 'Saudi Arabia', code: 'SA' },\n  { name: 'Senegal', code: 'SN' },\n  { name: 'Serbia and Montenegro', code: 'CS' },\n  { name: 'Seychelles', code: 'SC' },\n  { name: 'Sierra Leone', code: 'SL' },\n  { name: 'Singapore', code: 'SG' },\n  { name: 'Slovakia', code: 'SK' },\n  { name: 'Slovenia', code: 'SI' },\n  { name: 'Solomon Islands', code: 'SB' },\n  { name: 'Somalia', code: 'SO' },\n  { name: 'South Africa', code: 'ZA' },\n  { name: 'South Georgia and the South Sandwich Islands', code: 'GS' },\n  { name: 'Spain', code: 'ES' },\n  { name: 'Sri Lanka', code: 'LK' },\n  { name: 'Sudan', code: 'SD' },\n  { name: 'Suriname', code: 'SR' },\n  { name: 'Svalbard and Jan Mayen', code: 'SJ' },\n  { name: 'Swaziland', code: 'SZ' },\n  { name: 'Sweden', code: 'SE' },\n  { name: 'Switzerland', code: 'CH' },\n  { name: 'Syrian Arab Republic', code: 'SY' },\n  { name: 'Taiwan, Province of China', code: 'TW' },\n  { name: 'Tajikistan', code: 'TJ' },\n  { name: 'Tanzania, United Republic of', code: 'TZ' },\n  { name: 'Thailand', code: 'TH' },\n  { name: 'Timor-Leste', code: 'TL' },\n  { name: 'Togo', code: 'TG' },\n  { name: 'Tokelau', code: 'TK' },\n  { name: 'Tonga', code: 'TO' },\n  { name: 'Trinidad and Tobago', code: 'TT' },\n  { name: 'Tunisia', code: 'TN' },\n  { name: 'Turkey', code: 'TR' },\n  { name: 'Turkmenistan', code: 'TM' },\n  { name: 'Turks and Caicos Islands', code: 'TC' },\n  { name: 'Tuvalu', code: 'TV' },\n  { name: 'Uganda', code: 'UG' },\n  { name: 'Ukraine', code: 'UA' },\n  { name: 'United Arab Emirates', code: 'AE' },\n  { name: 'United Kingdom', code: 'GB' },\n  { name: 'United States', code: 'US' },\n  { name: 'United States Minor Outlying Islands', code: 'UM' },\n  { name: 'Uruguay', code: 'UY' },\n  { name: 'Uzbekistan', code: 'UZ' },\n  { name: 'Vanuatu', code: 'VU' },\n  { name: 'Venezuela', code: 'VE' },\n  { name: 'Viet Nam', code: 'VN' },\n  { name: 'Virgin Islands, British', code: 'VG' },\n  { name: 'Virgin Islands, U.S.', code: 'VI' },\n  { name: 'Wallis and Futuna', code: 'WF' },\n  { name: 'Western Sahara', code: 'EH' },\n  { name: 'Yemen', code: 'YE' },\n  { name: 'Zambia', code: 'ZM' },\n  { name: 'Zimbabwe', code: 'ZW' }\n]\n","import { Map } from 'immutable'\n\nexport default function (values) {\n  let errors = new Map()\n\n  values.forEach((value, name) => {\n    if (name !== 'isPremium' && value === '') {\n      errors = errors.set(name, 'Field is required')\n    }\n  })\n\n  return errors\n}\n","import React, { useEffect, useState } from 'react'\nimport { MAXIMUM_NUMBER_OF_PRODUCTS, PRODUCT_PRICE, DISCOUNT_PERCENT_PER_UNIT, PRODUCT_PRICE_DECIMAL_PART, SHIPPING_PRICE } from '../constants/constants'\nimport COUNTRIES from '../constants/countries'\nimport { useForm } from '../hooks/useForm'\nimport addOrderFormValidator from '../validators/addOrderFormValidator'\nimport { Map } from 'immutable'\nimport { calculateDiscount } from '../services/discountService'\nimport { calculatePrice, roundPrice } from '../services/priceService'\nimport '../styles/AddOrderForm.css'\nimport cx from 'classnames'\n\nfunction generateUnitOptionTags (max = MAXIMUM_NUMBER_OF_PRODUCTS) {\n  const options = [<option key='total-units-empty' value=''>Select total units</option>]\n\n  for (let i = 1; i <= max; i++) {\n    options.push(<option key={`total-units${i}`} value={i}>{i}</option>)\n  }\n\n  return options\n}\n\nfunction generateCountryOptionTags () {\n  const options = COUNTRIES.map((country) => <option key={`country${country.code}`} value={country.code}>{country.name}</option>)\n  options.unshift(<option key='country-empty' value=''>Select country</option>)\n\n  return options\n}\n\nconst defaultValues = new Map({\n  firstName: '',\n  lastName: '',\n  email: '',\n  phone: '',\n  streetName: '',\n  city: '',\n  country: '',\n  units: '',\n  isPremium: false\n})\n\nfunction AddOrderForm (props) {\n  const { onGeolocationInitialize, country } = props\n\n  useEffect(() => {\n    onGeolocationInitialize()\n  }, [])\n\n  const { values, errors, onChange, setFormErrors } = useForm(defaultValues.set('country', country), addOrderFormValidator)\n\n  const [price, setPrice] = useState(new Map({ total: 0, discount: 0 }))\n\n  const onTotalUnitsChange = (event) => {\n    onChange(event)\n    const totalUnits = parseInt(event.target.value)\n    const discount = calculateDiscount(totalUnits, DISCOUNT_PERCENT_PER_UNIT)\n    console.log(discount * 100)\n    const totalPrice = roundPrice(calculatePrice(PRODUCT_PRICE, totalUnits, discount), PRODUCT_PRICE_DECIMAL_PART)\n    setPrice(new Map({ total: totalPrice, discount: ((discount * 100).toFixed(0)) }))\n  }\n\n  const onSubmit = (event) => {\n    event.preventDefault()\n    const { onCheckout } = props\n    const errors = addOrderFormValidator(values)\n\n    if (errors.count()) {\n      setFormErrors(errors)\n    } else {\n      onCheckout(values)\n    }\n  }\n\n  console.log(values)\n\n  return (\n    <div className='Add-order-form'>\n      <div className='Add-order-form-product-info'>\n        <div className='Add-order-form-product-image-container'>\n          <img className='Add-order-form-product-image' src='https://d3hlrrbqydii6y.cloudfront.net/img/114b3c76b08fd8053ac7d74ea4d15c40.png' />\n        </div>\n        <div className='Add-order-form-product-price-container'>\n          <p className='Add-order-form-product-price-info'>Select number of units to see your price and discount</p>\n          <div className='Add-order-form-total-units'>\n            <label className='Add-order-form-label' htmlFor='units'>\n              <span>Total units</span>\n            </label>\n            <span className='Add-order-form-product-form-field'>\n              {errors.get('units') && <span className={cx('Add-order-form-product-form-field-error', { 'Add-order-form-product-form-field-error-visible': errors.get('units') })}>{errors.get('units')}</span>}\n              <select id='units' name='units' value={values.get('units')} onChange={onTotalUnitsChange}>\n                {generateUnitOptionTags()}\n              </select>\n            </span>\n          </div>\n          <div className='Add-order-form-product-total-price'>\n            {price.get('discount') > 0 && <p className='Add-order-form-product-discount'>Your discount: <span className='Add-order-form-product-percent'>{`${price.get('discount')}%!`}</span></p>}\n            {price.get('total') > 0 && <p className='Add-order-form-product-price'>Your price: <span className='Add-order-form-product-total'>{price.get('total')}</span>&nbsp;USD</p>}\n            {values.get('units') > 0 && <p className='Add-order-form-product-shipping'>Shipping cost: {Number(values.get('units')) === MAXIMUM_NUMBER_OF_PRODUCTS ? <span className='Add-order-form-product-free-shipping'>Free!</span> : `${SHIPPING_PRICE} USD`}</p>}\n          </div>\n        </div>\n      </div>\n      <form className='Add-order-form-product-form' onSubmit={onSubmit}>\n        <div className='Add-order-form-product-row'>\n          <label className='Add-order-form-label' htmlFor='firstName'>\n            <span>First Name</span>\n          </label>\n          <span className='Add-order-form-product-form-field'>\n            {errors.get('firstName') && <span className={cx('Add-order-form-product-form-field-error', { 'Add-order-form-product-form-field-error-visible': errors.get('firstName') })}>{errors.get('firstName')}</span>}\n            <input id='firstName' className='Add-order-form-input' type='text' placeholder='First Name' name='firstName' value={values.get('firstName')} onChange={onChange} />\n          </span>\n        </div>\n        <div className='Add-order-form-product-row'>\n          <label className='Add-order-form-label' htmlFor='lastName'>\n            <span>Last Name</span>\n          </label>\n          <span className='Add-order-form-product-form-field'>\n            {errors.get('lastName') && <span className={cx('Add-order-form-product-form-field-error', { 'Add-order-form-product-form-field-error-visible': errors.get('lastName') })}>{errors.get('lastName')}</span>}\n            <input id='lastName' className='Add-order-form-input' type='text' placeholder='Last Name' name='lastName' value={values.get('lastName')} onChange={onChange} />\n          </span>\n        </div>\n        <div className='Add-order-form-product-row'>\n          <label className='Add-order-form-label' htmlFor='email'>\n            <span>Email</span>\n          </label>\n          <span className='Add-order-form-product-form-field'>\n            {errors.get('email') && <span className={cx('Add-order-form-product-form-field-error', { 'Add-order-form-product-form-field-error-visible': errors.get('email') })}>{errors.get('email')}</span>}\n            <input id='email' className='Add-order-form-input' type='text' placeholder='Email' name='email' value={values.get('email')} onChange={onChange} />\n          </span>\n        </div>\n        <div className='Add-order-form-product-row'>\n          <label className='Add-order-form-label' htmlFor='phone'>\n            <span>Phone</span>\n          </label>\n          <span className='Add-order-form-product-form-field'>\n            {errors.get('phone') && <span className={cx('Add-order-form-product-form-field-error', { 'Add-order-form-product-form-field-error-visible': errors.get('phone') })}>{errors.get('phone')}</span>}\n            <input id='phone' className='Add-order-form-input' type='text' placeholder='Phone' name='phone' value={values.get('phone')} onChange={onChange} />\n          </span>\n        </div>\n        <div className='Add-order-form-product-row'>\n          <label className='Add-order-form-label' htmlFor='city'>\n            <span>City</span>\n          </label>\n          <span className='Add-order-form-product-form-field'>\n            {errors.get('city') && <span className={cx('Add-order-form-product-form-field-error', { 'Add-order-form-product-form-field-error-visible': errors.get('city') })}>{errors.get('city')}</span>}\n            <input id='city' className='Add-order-form-input' type='text' placeholder='City' name='city' value={values.get('city')} onChange={onChange} />\n          </span>\n        </div>\n        <div className='Add-order-form-product-row'>\n          <label className='Add-order-form-label' htmlFor='streetName'>\n            <span>Street</span>\n          </label>\n          <span className='Add-order-form-product-form-field'>\n            {errors.get('streetName') && <span className={cx('Add-order-form-product-form-field-error', { 'Add-order-form-product-form-field-error-visible': errors.get('streetName') })}>{errors.get('streetName')}</span>}\n            <input id='streetName' className='Add-order-form-input' type='text' placeholder='Street' name='streetName' value={values.get('streetName')} onChange={onChange} />\n          </span>\n        </div>\n        <div className='Add-order-form-product-row'>\n          <label className='Add-order-form-label' htmlFor='country'>\n            <span>Country</span>\n          </label>\n          <span className='Add-order-form-product-form-field'>\n            {errors.get('country') && <span className={cx('Add-order-form-product-form-field-error', { 'Add-order-form-product-form-field-error-visible': errors.get('country') })}>{errors.get('country')}</span>}\n            <select id='country' name='country' value={values.get('country')} onChange={onChange}>\n              {generateCountryOptionTags(values.get('country'))}\n            </select>\n          </span>\n        </div>\n        <div className='Add-order-form-product-row Add-order-form-product-row-premium-shipping'>\n          <label className='Add-order-form-label' htmlFor='isPremium'>\n            <span>Premium shipping and support</span>\n          </label>\n          <span className='Add-order-form-product-form-field Add-order-form-product-form-checkbox'>\n            {errors.get('isPremium') && <span className={cx('Add-order-form-product-form-field-error', { 'Add-order-form-product-form-field-error-visible': errors.get('isPremium') })}>{errors.get('isPremium')}</span>}\n            <input id='isPremium' type='checkbox' name='isPremium' value={values.get('isPremium')} checked={values.get('isPremium')} onChange={onChange} />\n          </span>\n        </div>\n        <div className='Add-order-form-product-row'>\n          <input className='Add-order-form-submit' type='submit' value='Checkout' />\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default AddOrderForm\n","import { useEffect, useState } from 'react'\nimport { Map } from 'immutable'\nimport { MAXIMUM_NUMBER_OF_PRODUCTS } from '../constants/constants'\n\nexport const useForm = (initialValues, validator) => {\n  const initialState = new Map({\n    values: initialValues,\n    errors: new Map()\n  })\n\n  const [fields, setFields] = useState(initialState)\n  const country = initialValues.get('country')\n\n  useEffect(() => {\n    if (country) {\n      setFields(initialState)\n    }\n  }, [country])\n\n  return {\n    values: fields.get('values'),\n    errors: fields.get('errors'),\n    setFormErrors: (errors) => {\n      setFields(fields.set('errors', errors))\n    },\n    reset: () => setFields(initialState),\n    onChange: event => {\n      const { target } = event\n      let values = fields.get('values')\n      let errors = fields.get('errors')\n      values = values.set(target.name, target.type === 'checkbox' ? !(target.value === 'true') : target.value)\n\n      if (Number(values.get('units')) === MAXIMUM_NUMBER_OF_PRODUCTS) {\n        values = values.set('isPremium', true)\n      }\n\n      errors = errors.remove(target.name)\n\n      setFields(fields.set('values', values).set('errors', errors.merge(validator(new Map({\n        [target.name]: target.value\n      })))))\n    }\n  }\n}\n","export const PRODUCT_PRICE = 27.49\nexport const DISCOUNT_PERCENT_PER_UNIT = 5\nexport const PRODUCT_PRICE_DECIMAL_PART = 99\nexport const MAXIMUM_NUMBER_OF_PRODUCTS = 12\nexport const SHIPPING_PRICE = 15\n","export function calculateDiscount (units, discountPercentPerUnit) {\n  return (units - 1) * (discountPercentPerUnit / 100)\n}\n","export function calculatePrice (price, units, discount) {\n  return price * units * (1 - discount)\n}\n\nexport function roundPrice (price, decimalPart) {\n  price = price.toString()\n  const priceParts = price.split('.')\n  console.log(priceParts[0] + '.' + decimalPart)\n  return parseFloat(priceParts[0] + '.' + decimalPart)\n}\n","import React from 'react'\nimport '../styles/Order.css'\n\nfunction Order (props) {\n  const { order } = props\n\n  const date = new Date(order.get('createdAt'))\n\n  return (\n    <tr className='Orders-row'>\n      <td>\n        <span className='Order-data Order-id'>{order.get('id')}</span>\n      </td>\n      <td>\n        <span className='Order-data Order-date'>{date.toLocaleDateString()} {date.toLocaleTimeString()}</span>\n      </td>\n      <td>\n        <span className='Order-data Order-first-name'>{order.get('firstName')}</span>\n      </td>\n      <td>\n        <span className='Order-data Order-last-name'>{order.get('lastName')}</span>\n      </td>\n      <td>\n        <span className='Order-data Order-country-code'>{order.get('country')}</span>\n      </td>\n      <td>\n        <span className='Order-data Order-units'>{order.get('units')}</span>\n      </td>\n      <td>\n        <span className='Order-data'>{order.get('isPremium') ? 'Yes' : 'No'}</span>\n      </td>\n    </tr>\n  )\n}\n\nexport default Order\n","import React, { useEffect } from 'react'\nimport Order from './Order'\nimport '../styles/Orders.css'\n\nfunction Orders (props) {\n  const { onInitialize, orders } = props\n\n  useEffect(() => {\n    onInitialize()\n  }, [])\n\n  return (\n    <table className='Orders'>\n      <thead className='Orders-header'>\n        <tr>\n          <th>ID</th>\n          <th>Date</th>\n          <th>First Name</th>\n          <th>Last Name</th>\n          <th>Country</th>\n          <th>Units</th>\n          <th>Premium shipping</th>\n        </tr>\n      </thead>\n      <tbody>\n        {orders.map((order) => <Order key={order.get('id')} order={order} />)}\n      </tbody>\n    </table>\n  )\n}\n\nexport default Orders\n","import React from 'react'\nimport AddOrderForm from './AddOrderForm'\nimport Orders from './Orders'\nimport '../styles/Product.css'\n\nfunction Product (props) {\n  const { onInitialize, orders, onCheckout, country, onGeolocationInitialize } = props\n\n  return (\n    <div className='Product-container'>\n      <section className='Product'>\n        <header>\n          <h1 className='Product-section-title'>Product</h1>\n        </header>\n        <AddOrderForm onCheckout={onCheckout} country={country} onGeolocationInitialize={onGeolocationInitialize} />\n      </section>\n      <section className='Product-orders'>\n        <header>\n          <h1 className='Product-section-title'>Orders</h1>\n        </header>\n        <Orders onInitialize={onInitialize} orders={orders} />\n      </section>\n    </div>\n  )\n}\n\nexport default Product\n","import { connect } from 'react-redux'\nimport { loadOrders, addNewOrder } from '../data/orders/ordersActionCreators'\nimport { loadGeolocationData } from '../data/geolocation/geolocationActionCreators'\nimport Product from '../components/Product'\n\nconst mapStateToProps = (state) => {\n  const { geolocationReducer, ordersReducer } = state\n\n  return {\n    orders: ordersReducer.get('orders'),\n    country: geolocationReducer.get('country')\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onInitialize: () => {\n      dispatch(loadOrders())\n    },\n    onCheckout: (order) => {\n      dispatch(addNewOrder(order))\n    },\n    onGeolocationInitialize: () => {\n      dispatch(loadGeolocationData())\n    }\n  }\n}\n\nconst ProductPage = connect(mapStateToProps, mapDispatchToProps)(Product)\n\nexport default ProductPage\n","export const LOAD_ORDERS_REQUEST = 'LOAD_ORDERS_REQUEST'\nexport const LOAD_ORDERS_SUCCESS = 'LOAD_ORDERS_SUCCESS'\nexport const LOAD_ORDERS_FAILURE = 'LOAD_ORDERS_FAILURE'\nexport const ADD_NEW_ORDER = 'ADD_NEW_ORDER'\n","import { LOAD_GEOLOCATION_DATA_REQUEST, LOAD_GEOLOCATION_DATA_SUCCESS } from './geolocationActionTypes'\nimport fetch from 'cross-fetch'\n\nexport function loadGeolocationData () {\n  return function (dispatch) {\n    dispatch({\n      type: LOAD_GEOLOCATION_DATA_REQUEST\n    })\n\n    fetch('//ip-api.com/json/')\n      .then(response => response.json())\n      .then(data => {\n        dispatch({\n          type: LOAD_GEOLOCATION_DATA_SUCCESS,\n          data\n        })\n      })\n  }\n}\n","export const LOAD_GEOLOCATION_DATA_REQUEST = 'LOAD_GEOLOCATION_DATA_REQUEST'\nexport const LOAD_GEOLOCATION_DATA_SUCCESS = 'LOAD_GEOLOCATION_DATA_SUCCESS'\nexport const LOAD_GEOLOCATION_DATA_FAILURE = 'LOAD_GEOLOCATION_DATA_FAILURE'\n","import React from 'react'\nimport ProductContainer from '../containers/ProductContainer'\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from 'react-router-dom'\n\nexport default (\n  <Router>\n    <Switch>\n      <Route exact path='/poseidon/'>\n        <Redirect to='/poseidon/product/1' />\n      </Route>\n      <Route path='/poseidon/product/:id'>\n        <ProductContainer />\n      </Route>\n    </Switch>\n  </Router>\n)\n","import fetch from 'cross-fetch'\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import { LOAD_ORDERS_REQUEST, LOAD_ORDERS_SUCCESS, LOAD_ORDERS_FAILURE, ADD_NEW_ORDER } from './ordersActionTypes'\nimport { List, Map } from 'immutable'\nimport Order from '../order/orderModel'\n\nconst initialState = new Map({\n  orders: new List()\n})\n\nexport default function orders (state = initialState, action) {\n  switch (action.type) {\n    case LOAD_ORDERS_REQUEST:\n      return state\n    case LOAD_ORDERS_SUCCESS:\n      return state.set('orders', action.orders)\n    case LOAD_ORDERS_FAILURE:\n      return state\n    case ADD_NEW_ORDER: {\n      let newOrder = new Order(action.order)\n      newOrder = newOrder.set('id', Math.random().toString(36))\n      newOrder = newOrder.set('createdAt', (new Date()).toISOString())\n      return state.updateIn(['orders'], (orders) => {\n        return orders.unshift(newOrder)\n      })\n    }\n    default:\n      return state\n  }\n}\n","import { LOAD_GEOLOCATION_DATA_REQUEST, LOAD_GEOLOCATION_DATA_SUCCESS } from './geolocationActionTypes'\nimport { Map } from 'immutable'\n\nconst initialState = new Map({\n  country: ''\n})\n\nexport default function orders (state = initialState, action) {\n  switch (action.type) {\n    case LOAD_GEOLOCATION_DATA_REQUEST:\n      return state\n    case LOAD_GEOLOCATION_DATA_SUCCESS:\n      return state.set('country', action.data.countryCode)\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport ordersReducer from './data/orders/ordersReducer'\nimport geolocationReducer from './data/geolocation/geolocationReducer'\n\nexport default combineReducers({\n  ordersReducer,\n  geolocationReducer\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport routes from './routes/routes'\nimport { Provider } from 'react-redux'\nimport * as serviceWorker from './serviceWorker'\n\nimport configureStore from './configureStore'\n\nconst store = configureStore()\n\nReactDOM.render(<Provider store={store}>{routes}</Provider>, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import { applyMiddleware, createStore } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport loggerMiddleware from 'redux-logger'\nimport rootReducer from './rootReducer'\n\nexport default function configureStore (preloadedState) {\n  const middlewares = [thunkMiddleware, loggerMiddleware]\n  const middlewareEnhancer = applyMiddleware(...middlewares)\n\n  return createStore(rootReducer, preloadedState, middlewareEnhancer)\n}\n"],"sourceRoot":""}